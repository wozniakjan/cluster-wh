
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: clusters.kubermatic.jw.io
spec:
  group: kubermatic.jw.io
  names:
    kind: Cluster
    listKind: ClusterList
    plural: clusters
    singular: cluster
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.cloud.dc
      name: DataCenter
      type: string
    - jsonPath: .spec.version
      name: Version
      type: string
    - jsonPath: .spec.containerRuntime
      name: CRI
      priority: 1
      type: string
    - jsonPath: .spec.cniPlugin.type
      name: CNI
      priority: 1
      type: string
    - description: CreationTimestamp is a timestamp representing the server time when
        this object was created. It is not guaranteed to be set in happens-before
        order across separate operations. Clients may not set this value. It is represented
        in RFC3339 form and is in UTC.
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        description: Cluster is the Schema for the cluster DMZ API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ClusterSpec defines the cluster specification
            properties:
              admissionPlugins:
                description: Additional Admission Controller plugins
                items:
                  type: string
                type: array
              auditLogging:
                description: AuditLogging
                properties:
                  enabled:
                    type: boolean
                type: object
              cloud:
                description: Cloud specifies the cloud providers configuration
                properties:
                  alibaba:
                    description: AlibabaCloudSpec specifies the access data to Alibaba.
                    properties:
                      accessKeyId:
                        type: string
                      accessKeySecret:
                        type: string
                      credentialsReference:
                        description: GlobalObjectKeySelector is needed as we can not
                          use v1.SecretKeySelector because it is not cross namespace
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          key:
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                    type: object
                  anexia:
                    description: AnexiaCloudSpec specifies the access data to Anexia.
                    properties:
                      credentialsReference:
                        description: GlobalObjectKeySelector is needed as we can not
                          use v1.SecretKeySelector because it is not cross namespace
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          key:
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                      token:
                        type: string
                    type: object
                  aws:
                    description: AWSCloudSpec specifies access data to Amazon Web
                      Services.
                    properties:
                      accessKeyId:
                        type: string
                      credentialsReference:
                        description: GlobalObjectKeySelector is needed as we can not
                          use v1.SecretKeySelector because it is not cross namespace
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          key:
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                      instanceProfileName:
                        type: string
                      roleARN:
                        description: The IAM role, the control plane will use. The
                          control plane will perform an assume-role
                        type: string
                      roleName:
                        description: DEPRECATED. Don't care for the role name. We
                          only require the ControlPlaneRoleARN to be set so the control
                          plane can perform the assume-role. We keep it for backwards
                          compatibility (We use this name for cleanup purpose).
                        type: string
                      routeTableId:
                        type: string
                      secretAccessKey:
                        type: string
                      securityGroupID:
                        type: string
                      vpcId:
                        type: string
                    required:
                    - instanceProfileName
                    - roleARN
                    - routeTableId
                    - securityGroupID
                    - vpcId
                    type: object
                  azure:
                    description: AzureCloudSpec specifies access credentials to Azure
                      cloud.
                    properties:
                      assignAvailabilitySet:
                        type: boolean
                      availabilitySet:
                        type: string
                      clientID:
                        type: string
                      clientSecret:
                        type: string
                      credentialsReference:
                        description: GlobalObjectKeySelector is needed as we can not
                          use v1.SecretKeySelector because it is not cross namespace
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          key:
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                      loadBalancerSKU:
                        description: LoadBalancerSKU sets the LB type that will be
                          used for the Azure cluster, possible values are "basic"
                          and "standard", if empty, "basic" will be used
                        type: string
                      resourceGroup:
                        type: string
                      routeTable:
                        type: string
                      securityGroup:
                        type: string
                      subnet:
                        type: string
                      subscriptionID:
                        type: string
                      tenantID:
                        type: string
                      vnet:
                        type: string
                      vnetResourceGroup:
                        type: string
                    required:
                    - assignAvailabilitySet
                    - availabilitySet
                    - loadBalancerSKU
                    - resourceGroup
                    - routeTable
                    - securityGroup
                    - subnet
                    - vnet
                    - vnetResourceGroup
                    type: object
                  bringyourown:
                    description: BringYourOwnCloudSpec specifies access data for a
                      bring your own cluster.
                    type: object
                  dc:
                    description: DatacenterName where the users 'cloud' lives in.
                    type: string
                  digitalocean:
                    description: DigitaloceanCloudSpec specifies access data to DigitalOcean.
                    properties:
                      credentialsReference:
                        description: GlobalObjectKeySelector is needed as we can not
                          use v1.SecretKeySelector because it is not cross namespace
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          key:
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                      token:
                        type: string
                    type: object
                  fake:
                    description: FakeCloudSpec specifies access data for a fake cloud.
                    properties:
                      token:
                        type: string
                    type: object
                  gcp:
                    description: GCPCloudSpec specifies access data to GCP.
                    properties:
                      credentialsReference:
                        description: GlobalObjectKeySelector is needed as we can not
                          use v1.SecretKeySelector because it is not cross namespace
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          key:
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                      network:
                        type: string
                      serviceAccount:
                        type: string
                      subnetwork:
                        type: string
                    required:
                    - network
                    - subnetwork
                    type: object
                  hetzner:
                    description: HetznerCloudSpec specifies access data to hetzner
                      cloud.
                    properties:
                      credentialsReference:
                        description: GlobalObjectKeySelector is needed as we can not
                          use v1.SecretKeySelector because it is not cross namespace
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          key:
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                      network:
                        description: Network is the pre-existing Hetzner network in
                          which the machines are running. While machines can be in
                          multiple networks, a single one must be chosen for the HCloud
                          CCM to work. If this is empty, the network configured on
                          the datacenter will be used.
                        type: string
                      token:
                        description: Token is used to authenticate with the Hetzner
                          cloud API.
                        type: string
                    type: object
                  kubevirt:
                    description: KubevirtCloudSpec specifies the access data to Kubevirt.
                    properties:
                      credentialsReference:
                        description: GlobalObjectKeySelector is needed as we can not
                          use v1.SecretKeySelector because it is not cross namespace
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          key:
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                      kubeconfig:
                        type: string
                    type: object
                  openstack:
                    description: OpenstackCloudSpec specifies access data to an OpenStack
                      cloud.
                    properties:
                      applicationCredentialID:
                        type: string
                      applicationCredentialSecret:
                        type: string
                      credentialsReference:
                        description: GlobalObjectKeySelector is needed as we can not
                          use v1.SecretKeySelector because it is not cross namespace
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          key:
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                      domain:
                        type: string
                      floatingIpPool:
                        description: "FloatingIPPool holds the name of the public
                          network The public network is reachable from the outside
                          world and should provide the pool of IP addresses to choose
                          from. \n When specified, all worker nodes will receive a
                          public ip from this floating ip pool \n Note that the network
                          is external if the \"External\" field is set to true"
                        type: string
                      network:
                        description: "Network holds the name of the internal network
                          When specified, all worker nodes will be attached to this
                          network. If not specified, a network, subnet & router will
                          be created \n Note that the network is internal if the \"External\"
                          field is set to false"
                        type: string
                      password:
                        type: string
                      routerID:
                        type: string
                      securityGroups:
                        type: string
                      subnetID:
                        type: string
                      tenant:
                        type: string
                      tenantID:
                        type: string
                      token:
                        description: Used internally during cluster creation
                        type: string
                      useOctavia:
                        description: "Whether or not to use Octavia for LoadBalancer
                          type of Service implementation instead of using Neutron-LBaaS.
                          Attention:Openstack CCM use Octavia as default load balancer
                          implementation since v1.17.0 \n Takes precedence over the
                          'use_octavia' flag provided at datacenter level if both
                          are specified."
                        type: boolean
                      useToken:
                        type: boolean
                      username:
                        type: string
                    required:
                    - floatingIpPool
                    - network
                    - routerID
                    - securityGroups
                    - subnetID
                    type: object
                  packet:
                    description: PacketCloudSpec specifies access data to a Packet
                      cloud.
                    properties:
                      apiKey:
                        type: string
                      billingCycle:
                        type: string
                      credentialsReference:
                        description: GlobalObjectKeySelector is needed as we can not
                          use v1.SecretKeySelector because it is not cross namespace
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          key:
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                      projectID:
                        type: string
                    required:
                    - billingCycle
                    type: object
                  vsphere:
                    description: VSphereCloudSpec specifies access data to VSphere
                      cloud.
                    properties:
                      credentialsReference:
                        description: GlobalObjectKeySelector is needed as we can not
                          use v1.SecretKeySelector because it is not cross namespace
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          key:
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                      datastore:
                        description: Datastore to be used for storing virtual machines
                          and as a default for dynamic volume provisioning, it is
                          mutually exclusive with DatastoreCluster.
                        type: string
                      datastoreCluster:
                        description: DatastoreCluster to be used for storing virtual
                          machines, it is mutually exclusive with Datastore.
                        type: string
                      folder:
                        description: Folder is the folder to be used to group the
                          provisioned virtual machines.
                        type: string
                      infraManagementUser:
                        description: This user will be used for everything except
                          cloud provider functionality
                        properties:
                          password:
                            type: string
                          username:
                            type: string
                        type: object
                      password:
                        description: Password is the vSphere user password.
                        type: string
                      resourcePool:
                        description: ResourcePool is used to manage resources such
                          as cpu and memory for vSphere virtual machines. The resource
                          pool should be defined on vSphere cluster level.
                        type: string
                      storagePolicy:
                        description: StoragePolicy to be used for storage provisioning
                        type: string
                      username:
                        description: Username is the vSphere user name.
                        type: string
                      vmNetName:
                        description: VMNetName is the name of the vSphere network.
                        type: string
                    required:
                    - infraManagementUser
                    - storagePolicy
                    - vmNetName
                    type: object
                required:
                - dc
                type: object
              clusterNetwork:
                description: ClusterNetwork contains network settings.
                properties:
                  dnsDomain:
                    description: Domain name for services.
                    type: string
                  ipvs:
                    description: IPVS defines kube-proxy ipvs configuration options
                    properties:
                      strictArp:
                        description: StrictArp configure arp_ignore and arp_announce
                          to avoid answering ARP queries from kube-ipvs0 interface.
                          defaults to true.
                        type: boolean
                    type: object
                  konnectivityEnabled:
                    description: KonnectivityEnabled enables konnectivity for controlplane
                      to node network communication.
                    type: boolean
                  nodeLocalDNSCacheEnabled:
                    description: NodeLocalDNSCacheEnabled controls whether the NodeLocal
                      DNS Cache feature is enabled. Defaults to true.
                    type: boolean
                  pods:
                    description: The network ranges from which POD networks are allocated.
                    properties:
                      cidrBlocks:
                        items:
                          type: string
                        type: array
                    required:
                    - cidrBlocks
                    type: object
                  proxyMode:
                    description: ProxyMode defines the kube-proxy mode (ipvs/iptables).
                      Defaults to ipvs.
                    type: string
                  services:
                    description: The network ranges from which service VIPs are allocated.
                    properties:
                      cidrBlocks:
                        items:
                          type: string
                        type: array
                    required:
                    - cidrBlocks
                    type: object
                required:
                - dnsDomain
                - pods
                - proxyMode
                - services
                type: object
              containerRuntime:
                description: ContainerRuntime to use, i.e. Docker or containerd. By
                  default containerd will be used.
                type: string
              enableUserSSHKeyAgent:
                description: EnableUserSSHKeyAgent control whether the UserSSHKeyAgent
                  will be deployed in the user cluster or not. If it was enabled,
                  the agent will be deployed and used to sync the user ssh keys, that
                  the user attach to the created cluster. If the agent was disabled,
                  it won't be deployed in the user cluster, thus after the cluster
                  creation any attached ssh keys won't be synced to the worker nodes.
                  Once the agent is enabled/disabled it cannot be changed after the
                  cluster is being created.
                type: boolean
              machineNetworks:
                description: MachineNetworks optionally specifies the parameters for
                  IPAM.
                items:
                  description: MachineNetworkingConfig specifies the networking parameters
                    used for IPAM.
                  properties:
                    cidr:
                      type: string
                    dnsServers:
                      items:
                        type: string
                      type: array
                    gateway:
                      type: string
                  required:
                  - cidr
                  - dnsServers
                  - gateway
                  type: object
                type: array
              mla:
                description: MLA contains monitoring, logging and alerting related
                  settings for the user cluster.
                properties:
                  loggingEnabled:
                    description: LoggingEnabled is the flag for enabling logging in
                      user cluster.
                    type: boolean
                  loggingResources:
                    description: LoggingResources is the resource requirements for
                      user cluster promtail.
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                  monitoringEnabled:
                    description: MonitoringEnabled is the flag for enabling monitoring
                      in user cluster.
                    type: boolean
                  monitoringResources:
                    description: MonitoringResources is the resource requirements
                      for user cluster prometheus.
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                type: object
              oidc:
                description: OIDC settings
                properties:
                  clientId:
                    type: string
                  clientSecret:
                    type: string
                  extraScopes:
                    type: string
                  groupsClaim:
                    type: string
                  issuerUrl:
                    type: string
                  requiredClaim:
                    type: string
                  usernameClaim:
                    type: string
                type: object
              opaIntegration:
                description: OPAIntegration is a preview feature that enables OPA
                  integration with Kubermatic for the cluster. Enabling it causes
                  gatekeeper and its resources to be deployed on the user cluster.
                  By default it is disabled.
                properties:
                  enabled:
                    description: Enabled is the flag for enabling OPA integration
                    type: boolean
                  experimentalEnableMutation:
                    description: Enable mutation
                    type: boolean
                  webhookTimeoutSeconds:
                    description: WebhookTimeout is the timeout that is set for the
                      gatekeeper validating webhook admission review calls. By default
                      10 seconds.
                    format: int32
                    type: integer
                type: object
              podNodeSelectorAdmissionPluginConfig:
                additionalProperties:
                  type: string
                description: 'PodNodeSelectorAdmissionPluginConfig provides the configuration
                  for the PodNodeSelector. It''s used by the backend to create a configuration
                  file for this plugin. The key:value from the map is converted to
                  the namespace:<node-selectors-labels> in the file. The format in
                  a file: podNodeSelectorPluginConfig:  clusterDefaultNodeSelector:
                  <node-selectors-labels>  namespace1: <node-selectors-labels>  namespace2:
                  <node-selectors-labels>'
                type: object
              serviceAccount:
                description: ServiceAccount contains service account related settings
                  for the kube-apiserver of user cluster.
                properties:
                  apiAudiences:
                    description: APIAudiences are the Identifiers of the API If this
                      is not specified, it will be set to a single element list containing
                      the issuer URL
                    items:
                      type: string
                    type: array
                  issuer:
                    description: Issuer is the identifier of the service account token
                      issuer If this is not specified, it will be set to the URL of
                      apiserver by default
                    type: string
                  tokenVolumeProjectionEnabled:
                    type: boolean
                type: object
              updateWindow:
                description: Configure cluster upgrade window, currently used for
                  flatcar node reboots
                properties:
                  length:
                    type: string
                  start:
                    type: string
                type: object
              usePodNodeSelectorAdmissionPlugin:
                description: If active the PodNodeSelector admission plugin is configured
                  at the apiserver
                type: boolean
              usePodSecurityPolicyAdmissionPlugin:
                description: If active the PodSecurityPolicy admission plugin is configured
                  at the apiserver
                type: boolean
            required:
            - cloud
            type: object
          status:
            description: ClusterStatus defines the observed state
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
